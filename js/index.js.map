{
  "version": 3,
  "sources": ["../../build/js/index.js"],
  "sourcesContent": ["const pickRandom = (arr) => arr[Math.floor(Math.random() * arr.length)];\r\n\r\nconst generators = [\r\n  { url: \"https://source.unsplash.com/800x800?people\", weight: 10 },\r\n  { url: \"https://source.unsplash.com/800x800?group\", weight: 5 },\r\n];\r\n\r\nconst unrolledGenerators = generators.flatMap(({ url, weight }) => Array(weight).fill(url));\r\n\r\nconst imageReader = new FileReader();\r\n\r\nlet currentImage = new Image();\r\n\r\nconst rerollImage = async () => {\r\n  const imageData = await fetch(pickRandom(unrolledGenerators));\r\n\r\n  return new Promise((resolve) => {\r\n    const image = new Image();\r\n\r\n    image.addEventListener(\"load\", () => {\r\n      currentImage = image;\r\n      resolve();\r\n    });\r\n\r\n    image.crossOrigin = \"anonymous\";\r\n    image.src = imageData.url;\r\n  });\r\n};\r\n\r\nconst canvas = document.getElementById(\"picture\");\r\nconst ctx = canvas.getContext(\"2d\");\r\nconst font = new FontFace(\"Bebas Neue\", \"url(public/BebasNeue-Bold.ttf)\");\r\nconst canvasRect = canvas.getBoundingClientRect();\r\nconst offsetX = canvasRect.left;\r\nconst offsetY = canvasRect.top;\r\n\r\nlet isDragging = false;\r\nlet startX;\r\nlet startY;\r\n\r\nconst overlayImage = new Image();\r\noverlayImage.src = \"public/janecek.png\";\r\nconst initialWidth = 493;\r\nconst initialHeight = 897;\r\nconst descale = 1.8;\r\nconst overlayImageCoords = {\r\n  x: 500,\r\n  y: 800 - (initialHeight / descale),\r\n  width: initialWidth / descale,\r\n  height: initialHeight / descale,\r\n};\r\n\r\ncanvas.addEventListener(\"mousedown\", (e) => {\r\n  // mouse position\r\n  const mx = Number(e.clientX - offsetX);\r\n  const my = Number(e.clientY - offsetY);\r\n\r\n  if (mx > overlayImageCoords.x && mx < overlayImageCoords.x + overlayImageCoords.width\r\n    && my > overlayImageCoords.y && my < overlayImageCoords.y + overlayImageCoords.height) {\r\n    isDragging = true;\r\n  }\r\n\r\n  startX = mx;\r\n  startY = my;\r\n});\r\n\r\ncanvas.addEventListener(\"mouseup\", () => { isDragging = false; });\r\n\r\nconst initFont = async () => {\r\n  await font.load();\r\n  document.fonts.add(font);\r\n};\r\n\r\nconst setFile = (file) => {\r\n  if (!file.type.startsWith(\"image/\")) {\r\n    return;\r\n  }\r\n\r\n  imageReader.readAsDataURL(file);\r\n};\r\n\r\ncanvas.addEventListener(\"dragover\", (e) => e.preventDefault());\r\n\r\ncanvas.addEventListener(\"drop\", (e) => {\r\n  e.preventDefault();\r\n  if (!e.dataTransfer || e.dataTransfer.files.length <= 0) {\r\n    return;\r\n  }\r\n\r\n  setFile(e.dataTransfer.files[0]);\r\n});\r\n\r\nconst repaintImage = async () => {\r\n  // clear to black (for transparent images)\r\n  ctx.fillStyle = \"black\";\r\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n  // scale image to always fill the canvas\r\n  const scaleX = canvas.width / currentImage.width;\r\n  const scaleY = canvas.height / currentImage.height;\r\n  const scale = Math.max(scaleX, scaleY);\r\n  ctx.setTransform(scale, 0, 0, scale, 0, 0);\r\n  ctx.drawImage(currentImage, 0, 0);\r\n  ctx.setTransform(); // reset so that everything else is normal size\r\n\r\n  ctx.drawImage(overlayImage, overlayImageCoords.x, overlayImageCoords.y, overlayImageCoords.width, overlayImageCoords.height);\r\n\r\n  /*\r\n  const lines = splitText(currentText, 20).reverse();\r\n  const fontSize = lines.length < 5 ? 60 : 40;\r\n  ctx.font = `${fontSize}px 'Bebas Neue'`;\r\n  lines.forEach((line, index) => {\r\n    const x = 30;\r\n    const y = 685;\r\n    const padding = 15;\r\n    const lineHeight = padding + fontSize;\r\n    ctx.fillStyle = \"#f9dc4d\";\r\n    ctx\r\n      .fillRect(x, y - (index * lineHeight), ctx.measureText(line).width + 2 * padding, lineHeight);\r\n    ctx.textBaseline = \"top\";\r\n    ctx.fillStyle = \"black\";\r\n    ctx.fillText(line, x + padding, y + padding - (index * lineHeight));\r\n  });\r\n  */\r\n};\r\n\r\ncanvas.addEventListener(\"mousemove\", (e) => {\r\n  // mouse position\r\n  const mx = Number(e.clientX - offsetX);\r\n  const my = Number(e.clientY - offsetY);\r\n  // fancy cursor\r\n  if (mx > overlayImageCoords.x && mx < overlayImageCoords.x + overlayImageCoords.width\r\n    && my > overlayImageCoords.y && my < overlayImageCoords.y + overlayImageCoords.height) {\r\n    canvas.style.cursor = \"pointer\";\r\n  } else {\r\n    canvas.style.cursor = \"initial\";\r\n  }\r\n\r\n  if (isDragging) {\r\n    // calculate the distance the mouse has moved\r\n    // since the last mousemove\r\n    const dx = mx - startX;\r\n    const dy = my - startY;\r\n\r\n    overlayImageCoords.x += dx;\r\n    overlayImageCoords.y += dy;\r\n\r\n    repaintImage();\r\n\r\n    // reset the starting mouse position for the next mousemove\r\n    startX = mx;\r\n    startY = my;\r\n  }\r\n});\r\n\r\nimageReader.addEventListener(\"load\", (e) => {\r\n  currentImage = new Image();\r\n  currentImage.addEventListener(\"load\", () => repaintImage());\r\n  currentImage.src = e.target.result;\r\n});\r\n\r\nconst buttonRandomImg = document.getElementById(\"randomize\");\r\nbuttonRandomImg.addEventListener(\"click\", async () => {\r\n  await rerollImage();\r\n  repaintImage();\r\n});\r\n\r\nconst inputCustomImg = document.getElementById(\"customImage\");\r\ninputCustomImg.addEventListener(\"change\", (e) => {\r\n  e.preventDefault();\r\n  if (e.target.files.length <= 0) {\r\n    return;\r\n  }\r\n  setFile(e.target.files[0]);\r\n});\r\nconst buttonCustomImg = document.getElementById(\"customImageBtn\");\r\nbuttonCustomImg.addEventListener(\"click\", () => {\r\n  inputCustomImg.click();\r\n});\r\n\r\nconst inputCustom = document.getElementById(\"customText\");\r\nconst replaceWithCustomText = async (e) => {\r\n  if (e.type === \"input\" || inputCustom.value) {\r\n    currentText = inputCustom.value;\r\n    repaintImage();\r\n  }\r\n};\r\ninputCustom.addEventListener(\"click\", replaceWithCustomText);\r\ninputCustom.addEventListener(\"input\", replaceWithCustomText);\r\n\r\nconst slider = document.getElementById(\"slider\");\r\nslider.addEventListener(\"input\", (e) => {\r\n  overlayImageCoords.width = initialWidth * (e.target.value / 100);\r\n  overlayImageCoords.height = initialHeight * (e.target.value / 100);\r\n  repaintImage();\r\n});\r\n\r\nconst downloadLinkReal = document.createElement(\"a\");\r\ndownloadLinkReal.setAttribute(\"download\", \"TohleJsmeMy.jpg\");\r\nconst linkSave = document.getElementById(\"save\");\r\nlinkSave.addEventListener(\"click\", (e) => {\r\n  e.preventDefault();\r\n  downloadLinkReal.setAttribute(\"href\", canvas.toDataURL(\"image/jpeg\").replace(\"image/jpeg\", \"image/octet-stream\"));\r\n  downloadLinkReal.click();\r\n});\r\n\r\ninitFont();\r\n\r\nrerollImage()\r\n  .then(() => repaintImage());\r\n"],
  "mappings": "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",
  "names": []
}
